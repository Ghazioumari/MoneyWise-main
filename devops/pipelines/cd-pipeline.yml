trigger: none # CD pipeline is triggered after CI pipeline

parameters:
- name: Environment
  type: string
  default: 'dev'
  values:
  - dev
  - staging
  - prod

variables:
  - group: moneywise-${{ parameters.Environment }}

stages:
- stage: Deploy
  jobs:
  - deployment: DeployIIS
    environment: ${{ parameters.Environment }}
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none

          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'specific'
              project: '$(System.TeamProjectId)'
              pipeline: '$(System.DefinitionId)'
              specificBuildWithTriggering: true
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: IISWebAppManagementOnMachineGroup@0
            inputs:
              IISDeploymentType: 'IISWebsite'
              ActionIISWebsite: 'CreateOrUpdateWebsite'
              WebsiteName: 'MoneyWise-${{ parameters.Environment }}'
              WebsitePhysicalPath: '%SystemDrive%\inetpub\wwwroot\moneywise-${{ parameters.Environment }}'
              WebsitePhysicalPathAuth: 'WebsiteWindowsAuth'
              WebsiteAuthUserName: '$(IIS_AUTH_USERNAME)'
              WebsiteAuthUserPassword: '$(IIS_AUTH_PASSWORD)'
              AddBinding: true
              Bindings: |
                {
                  "bindings": [
                    {
                      "protocol": "http",
                      "ipAddress": "*",
                      "port": "80",
                      "hostname": "moneywise-${{ parameters.Environment }}.local"
                    }
                  ]
                }

          - task: IISWebAppDeploymentOnMachineGroup@0
            inputs:
              WebSiteName: 'MoneyWise-${{ parameters.Environment }}'
              Package: '$(System.ArtifactsDirectory)\drop\**\*.zip'
              RemoveAdditionalFilesFlag: true

  - deployment: ConfigureAnsible
    dependsOn: DeployIIS
    environment: ${{ parameters.Environment }}
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Install Ansible
                sudo apt update
                sudo apt install -y ansible

          - task: AnsiblePlaybook@0
            inputs:
              playbookSourceType: 'inline'
              inventoryType: 'inline'
              inline: |
                - hosts: windows
                  tasks:
                    - name: Ensure IIS features are installed
                      win_feature:
                        name:
                          - Web-Server
                          - Web-Asp-Net45
                        state: present
                    
                    - name: Configure application pool
                      win_iis_webapppool:
                        name: MoneyWise-${{ parameters.Environment }}
                        state: present
                        attributes:
                          managedRuntimeVersion: v4.0
                          managedPipelineMode: Integrated
              inventoryInline: |
                [windows]
                $(IIS_SERVER_IP)

                [windows:vars]
                ansible_user=$(ANSIBLE_WIN_USER)
                ansible_password=$(ANSIBLE_WIN_PASS)
                ansible_connection=winrm
                ansible_winrm_server_cert_validation=ignore

- stage: Verify
  jobs:
  - job: HealthCheck
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Wait for application to be ready
          sleep 30
          # Check if application is responding
          curl -f http://moneywise-${{ parameters.Environment }}.local/health || exit 1

    - task: SendEmail@1
      condition: always()
      inputs:
        To: 'your-email@domain.com'
        Subject: 'Deployment to ${{ parameters.Environment }} completed'
        Body: |
          Deployment to ${{ parameters.Environment }} environment has completed.
          Status: $(Agent.JobStatus)
          Environment URL: http://moneywise-${{ parameters.Environment }}.local
