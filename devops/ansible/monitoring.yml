---
- name: Setup Monitoring Stack
  hosts: monitoring_servers
  become: yes
  vars:
    prometheus_version: 2.45.0
    grafana_version: 10.0.0
    node_exporter_version: 1.6.0
    
  tasks:
    - name: Create Prometheus system group
      group:
        name: prometheus
        system: yes
        state: present

    - name: Create Prometheus system user
      user:
        name: prometheus
        system: yes
        group: prometheus
        create_home: no
        shell: /sbin/nologin

    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      with_items:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download and extract Prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes

    - name: Copy Prometheus binary
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
        dest: /usr/local/bin/
        mode: '0755'
        remote_src: yes

    - name: Configure Prometheus
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Install Node Exporter
      unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes

    - name: Copy Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/
        mode: '0755'
        remote_src: yes

    - name: Configure Node Exporter Service
      template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        mode: '0644'

    - name: Install Grafana
      apt:
        deb: "https://dl.grafana.com/oss/release/grafana_{{ grafana_version }}_amd64.deb"
        state: present

    - name: Configure Grafana
      template:
        src: grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        mode: '0644'

    - name: Start and enable services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
        daemon_reload: yes
      with_items:
        - prometheus
        - node_exporter
        - grafana-server

    - name: Configure Grafana datasource
      uri:
        url: http://localhost:3000/api/datasources
        method: POST
        body_format: json
        body:
          name: "Prometheus"
          type: "prometheus"
          url: "http://localhost:9090"
          access: "proxy"
          isDefault: true
        headers:
          Content-Type: "application/json"
          Authorization: "Basic {{ grafana_admin_auth }}"
      register: datasource
      until: datasource.status == 200
      retries: 3
      delay: 10

    - name: Import Grafana dashboards
      uri:
        url: http://localhost:3000/api/dashboards/db
        method: POST
        body_format: json
        body: "{{ lookup('file', 'dashboards/' + item) }}"
        headers:
          Content-Type: "application/json"
          Authorization: "Basic {{ grafana_admin_auth }}"
      with_items:
        - system-metrics.json
        - application-metrics.json
